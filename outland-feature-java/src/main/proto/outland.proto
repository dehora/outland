syntax = "proto3";

option optimize_for = SPEED;
option java_multiple_files = true;
option java_package = "outland.feature.proto";
option java_outer_classname = "FeatureMessage";

package outland;

message Owner {
    string id = 2;

    string username = 10;
    string email = 11;
    string name = 12;
}

message OwnerCollection {
    repeated Owner items = 10;
}

message FeatureVersion {
    int64 timestamp = 10;
    int64 counter = 11;
}

enum OptionType {
    /*
    A basic feature flag, or toggle. The result for this is always the value of Feature.State
    */
    flag = 0;
    /*
    a boolean option. unlike a flag, the true and false values can be weighted
    */
    bool = 1;
    /*
    a string option. unlike a flag, the values can be weighted
    */
    string = 2;
}

message FeatureOption {
    string id = 2;

    OptionType option = 10;
    string key = 11;
    string value = 12;
    int32 weight = 13;
}

message OptionCollection {
    OptionType option = 10;
    int32 maxweight = 11;
    repeated FeatureOption items = 12;
    string control = 13;
}

enum Status {
    none = 0;
    off = 1;
    on = 2;
}

message FeatureData {
    Status status = 11;
    OptionCollection options = 12;
    FeatureVersion version = 13;
}

message NamespaceFeature {
    string id = 1;
    string namespace = 2;
    string created = 3;
    string updated = 4;
    FeatureData data = 11;
}

message NamespaceFeatureCollection {
    repeated NamespaceFeature items = 10;
}

message Feature {
    string id = 1;
    string key = 2;
    string created = 3;
    string updated = 4;
    string group = 5;
    string description = 6;
    Owner owner = 7;
    FeatureData data = 8;
    NamespaceFeatureCollection namespaces = 9;
    map<string, string> properties = 10;
}

message FeatureCollection {
    string group = 10;
    repeated Feature items = 11;
}

message ServiceAccess {
    string id = 2;

    string name = 10;
    string key = 11;
}

message MemberAccess {
    string id = 2;

    string name = 10;
    string username = 11;
    string email = 12;
}

message AccessCollection {
    repeated ServiceAccess services = 10;
    repeated MemberAccess members = 11;
}

message Group {
    string id = 2;
    string created = 3;
    string updated = 4;
    map<string, string> properties = 5;

    string key = 10;
    string name = 11;
    OwnerCollection owners = 12;
    AccessCollection granted = 13;
}